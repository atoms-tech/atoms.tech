/**
 * Babel Configuration for React Compiler Integration
 * This configuration enables React Compiler with optimal settings
 */

export default {
  presets: [
    ['next/babel', { 
      'preset-react': {
        runtime: 'automatic',
        development: process.env.NODE_ENV === 'development',
      }
    }]
  ],
  plugins: [
    // React Compiler plugin - only in production for now
    ...(process.env.NODE_ENV === 'production' ? [
      ['babel-plugin-react-compiler', {
        // Use the configuration file
        configFile: './react-compiler.config.js',
        // Runtime optimizations
        runtimeModule: 'react/compiler-runtime',
        // Compilation mode
        compilationMode: 'all',
        // Source maps for debugging
        sourceMaps: process.env.NODE_ENV === 'development',
      }]
    ] : []),
    
    // Additional optimizations
    ...(process.env.NODE_ENV === 'production' ? [
      // Remove development-only code
      ['babel-plugin-transform-remove-console', {
        exclude: ['error', 'warn']
      }],
      // Optimize imports
      ['babel-plugin-transform-imports', {
        'lodash': {
          transform: 'lodash/${member}',
          preventFullImport: true
        },
        'date-fns': {
          transform: 'date-fns/${member}',
          preventFullImport: true
        }
      }]
    ] : []),
  ],
  
  // Environment-specific configurations
  env: {
    development: {
      plugins: [
        // React debugging tools
        'react-refresh/babel',
      ]
    },
    production: {
      plugins: [
        // Production optimizations
        ['babel-plugin-transform-remove-debugger'],
        ['babel-plugin-minify-dead-code-elimination'],
      ]
    },
    test: {
      presets: [
        ['next/babel', {
          'preset-env': {
            targets: {
              node: 'current'
            }
          }
        }]
      ]
    }
  },

  // Cache configuration for faster builds
  cacheDirectory: true,
  cacheCompression: false,
  
  // Compact output in production
  compact: process.env.NODE_ENV === 'production',
  
  // Comments removal in production
  comments: process.env.NODE_ENV !== 'production',

  // Source type
  sourceType: 'module',
};