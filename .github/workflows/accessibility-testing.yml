name: Accessibility Testing\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n  schedule:\n    # Run daily at 2 AM UTC\n    - cron: '0 2 * * *'\n  workflow_dispatch:\n    inputs:\n      wcag_level:\n        description: 'WCAG Compliance Level'\n        required: false\n        default: 'AA'\n        type: choice\n        options:\n        - 'A'\n        - 'AA'\n        - 'AAA'\n      fail_on_violations:\n        description: 'Fail on accessibility violations'\n        required: false\n        default: true\n        type: boolean\n      include_warnings:\n        description: 'Include warnings in results'\n        required: false\n        default: false\n        type: boolean\n\nenv:\n  NODE_VERSION: '18'\n  PLAYWRIGHT_BROWSERS_PATH: 0\n\njobs:\n  accessibility-tests:\n    name: Run Accessibility Tests\n    runs-on: ubuntu-latest\n    timeout-minutes: 30\n    \n    strategy:\n      matrix:\n        browser: [chromium, firefox, webkit]\n      fail-fast: false\n    \n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n      \n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n      \n      - name: Install dependencies\n        run: |\n          npm ci\n          npx playwright install --with-deps ${{ matrix.browser }}\n      \n      - name: Setup test environment\n        run: |\n          # Create necessary directories\n          mkdir -p test-results/accessibility\n          mkdir -p reports/accessibility\n          \n          # Set up environment variables\n          echo \"CI=true\" >> $GITHUB_ENV\n          echo \"PLAYWRIGHT_BASE_URL=http://localhost:3000\" >> $GITHUB_ENV\n          echo \"WCAG_LEVEL=${{ github.event.inputs.wcag_level || 'AA' }}\" >> $GITHUB_ENV\n      \n      - name: Build application\n        run: npm run build\n      \n      - name: Start application\n        run: |\n          npm start &\n          sleep 10\n          # Wait for application to be ready\n          npx wait-on http://localhost:3000 --timeout 60000\n        env:\n          PORT: 3000\n      \n      - name: Run Jest accessibility tests\n        run: |\n          npm run test:a11y -- \\\n            --coverage \\\n            --coverageDirectory=test-results/accessibility/coverage \\\n            --json \\\n            --outputFile=test-results/accessibility/jest-results.json\n        continue-on-error: true\n      \n      - name: Run Playwright accessibility tests\n        run: |\n          npx playwright test \\\n            --config=playwright.accessibility.config.ts \\\n            --project=accessibility-${{ matrix.browser }} \\\n            --reporter=html:test-results/accessibility/playwright-report-${{ matrix.browser }} \\\n            --reporter=json:test-results/accessibility/playwright-results-${{ matrix.browser }}.json\n        continue-on-error: true\n      \n      - name: Run axe-core accessibility scan\n        run: |\n          npx axe http://localhost:3000 \\\n            --timeout 30000 \\\n            --tags wcag2a,wcag2aa,wcag21aa \\\n            --format json \\\n            --output test-results/accessibility/axe-results-${{ matrix.browser }}.json\n        continue-on-error: true\n      \n      - name: Run Pa11y accessibility tests\n        run: |\n          npx pa11y \\\n            --config pa11y.config.js \\\n            --reporter json \\\n            http://localhost:3000 > test-results/accessibility/pa11y-results-${{ matrix.browser }}.json\n        continue-on-error: true\n      \n      - name: Run Lighthouse accessibility audit\n        run: |\n          npx lhci autorun \\\n            --config=lighthouse.accessibility.config.js \\\n            --upload.target=filesystem \\\n            --upload.outputDir=test-results/accessibility/lighthouse-${{ matrix.browser }}\n        continue-on-error: true\n      \n      - name: Run comprehensive accessibility CI\n        run: |\n          node scripts/accessibility/accessibility-ci.js \\\n            --baseUrl http://localhost:3000 \\\n            --outputDir test-results/accessibility/comprehensive-${{ matrix.browser }} \\\n            --wcagLevel ${{ env.WCAG_LEVEL }} \\\n            --failOnViolations ${{ github.event.inputs.fail_on_violations || 'true' }} \\\n            --includeWarnings ${{ github.event.inputs.include_warnings || 'false' }} \\\n            --browser ${{ matrix.browser }}\n        continue-on-error: true\n      \n      - name: Generate accessibility report\n        if: always()\n        run: |\n          node scripts/accessibility/generate-report.js \\\n            --inputDir test-results/accessibility \\\n            --outputDir reports/accessibility \\\n            --browser ${{ matrix.browser }} \\\n            --format html,json,markdown\n      \n      - name: Upload accessibility test results\n        if: always()\n        uses: actions/upload-artifact@v4\n        with:\n          name: accessibility-results-${{ matrix.browser }}\n          path: |\n            test-results/accessibility/\n            reports/accessibility/\n          retention-days: 30\n      \n      - name: Upload Playwright report\n        if: always()\n        uses: actions/upload-artifact@v4\n        with:\n          name: playwright-accessibility-report-${{ matrix.browser }}\n          path: test-results/accessibility/playwright-report-${{ matrix.browser }}/\n          retention-days: 30\n      \n      - name: Comment on PR with accessibility results\n        if: github.event_name == 'pull_request' && matrix.browser == 'chromium'\n        uses: actions/github-script@v7\n        with:\n          script: |\n            const fs = require('fs');\n            const path = require('path');\n            \n            try {\n              // Read the accessibility summary\n              const summaryPath = 'reports/accessibility/accessibility-summary.md';\n              if (fs.existsSync(summaryPath)) {\n                const summary = fs.readFileSync(summaryPath, 'utf8');\n                \n                await github.rest.issues.createComment({\n                  issue_number: context.issue.number,\n                  owner: context.repo.owner,\n                  repo: context.repo.repo,\n                  body: `## üîç Accessibility Test Results\\n\\n${summary}\\n\\n---\\n*Automated accessibility testing with axe-core, Pa11y, Lighthouse, and Playwright*`\n                });\n              }\n            } catch (error) {\n              console.log('Could not post accessibility results to PR:', error.message);\n            }\n      \n      - name: Fail job if accessibility violations found\n        if: |\n          github.event.inputs.fail_on_violations != 'false' && \n          github.event_name != 'schedule'\n        run: |\n          # Check if there are critical accessibility violations\n          if [ -f \"test-results/accessibility/comprehensive-${{ matrix.browser }}/accessibility-report.json\" ]; then\n            CRITICAL_ISSUES=$(jq '.criticalIssues | length' test-results/accessibility/comprehensive-${{ matrix.browser }}/accessibility-report.json)\n            OVERALL_SCORE=$(jq '.overallScore' test-results/accessibility/comprehensive-${{ matrix.browser }}/accessibility-report.json)\n            \n            echo \"Critical issues found: $CRITICAL_ISSUES\"\n            echo \"Overall accessibility score: $OVERALL_SCORE%\"\n            \n            if [ \"$CRITICAL_ISSUES\" -gt 0 ] || [ \"$OVERALL_SCORE\" -lt 80 ]; then\n              echo \"‚ùå Accessibility tests failed due to critical violations or low score\"\n              exit 1\n            else\n              echo \"‚úÖ Accessibility tests passed\"\n            fi\n          else\n            echo \"‚ö†Ô∏è Could not determine accessibility test results\"\n            exit 1\n          fi\n\n  accessibility-summary:\n    name: Accessibility Summary\n    runs-on: ubuntu-latest\n    needs: accessibility-tests\n    if: always()\n    \n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n      \n      - name: Download all accessibility results\n        uses: actions/download-artifact@v4\n        with:\n          pattern: accessibility-results-*\n          path: combined-results/\n      \n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n      \n      - name: Install dependencies\n        run: npm ci\n      \n      - name: Generate combined accessibility report\n        run: |\n          node scripts/accessibility/combine-reports.js \\\n            --inputDir combined-results \\\n            --outputDir final-accessibility-report \\\n            --format html,json,markdown,xml\n      \n      - name: Upload combined accessibility report\n        uses: actions/upload-artifact@v4\n        with:\n          name: final-accessibility-report\n          path: final-accessibility-report/\n          retention-days: 90\n      \n      - name: Update accessibility dashboard\n        if: github.ref == 'refs/heads/main'\n        run: |\n          # Update accessibility tracking dashboard\n          node scripts/accessibility/update-dashboard.js \\\n            --reportDir final-accessibility-report \\\n            --branch ${{ github.ref_name }} \\\n            --commit ${{ github.sha }}\n      \n      - name: Create accessibility badge\n        if: github.ref == 'refs/heads/main'\n        run: |\n          # Generate accessibility score badge\n          SCORE=$(jq '.overallScore' final-accessibility-report/combined-report.json)\n          COLOR=\"red\"\n          if [ \"$SCORE\" -ge 90 ]; then COLOR=\"brightgreen\"; fi\n          if [ \"$SCORE\" -ge 80 ] && [ \"$SCORE\" -lt 90 ]; then COLOR=\"yellow\"; fi\n          if [ \"$SCORE\" -ge 70 ] && [ \"$SCORE\" -lt 80 ]; then COLOR=\"orange\"; fi\n          \n          curl -s \"https://img.shields.io/badge/accessibility-${SCORE}%25-${COLOR}\" > accessibility-badge.svg\n      \n      - name: Deploy accessibility report to GitHub Pages\n        if: github.ref == 'refs/heads/main'\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: final-accessibility-report\n          destination_dir: accessibility-reports\n          keep_files: true\n      \n      - name: Notify team on accessibility regressions\n        if: |\n          github.ref == 'refs/heads/main' && \n          needs.accessibility-tests.result == 'failure'\n        uses: 8398a7/action-slack@v3\n        with:\n          status: failure\n          custom_payload: |\n            {\n              text: \"üö® Accessibility regression detected in ${{ github.repository }}\",\n              attachments: [{\n                color: \"danger\",\n                fields: [{\n                  title: \"Branch\",\n                  value: \"${{ github.ref_name }}\",\n                  short: true\n                }, {\n                  title: \"Commit\",\n                  value: \"${{ github.sha }}\",\n                  short: true\n                }, {\n                  title: \"Report\",\n                  value: \"<https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/accessibility-reports/|View Report>\",\n                  short: false\n                }]\n              }]\n            }\n        env:\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}\n\n  accessibility-performance:\n    name: Accessibility Performance Monitoring\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    needs: accessibility-summary\n    \n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n      \n      - name: Download accessibility report\n        uses: actions/download-artifact@v4\n        with:\n          name: final-accessibility-report\n          path: accessibility-report/\n      \n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n      \n      - name: Install dependencies\n        run: npm ci\n      \n      - name: Track accessibility metrics over time\n        run: |\n          node scripts/accessibility/track-metrics.js \\\n            --reportPath accessibility-report/combined-report.json \\\n            --outputPath accessibility-trends.json \\\n            --commit ${{ github.sha }} \\\n            --timestamp $(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\n      \n      - name: Upload accessibility trends\n        uses: actions/upload-artifact@v4\n        with:\n          name: accessibility-trends\n          path: accessibility-trends.json\n          retention-days: 365\n      \n      - name: Check for accessibility score degradation\n        run: |\n          # Compare with previous runs to detect degradation\n          node scripts/accessibility/check-degradation.js \\\n            --currentReport accessibility-report/combined-report.json \\\n            --threshold 5 \\\n            --alertOnRegression true"