openapi: 3.0.3
info:
  title: Atoms API - Files & Diagrams
  version: 1.0.0
servers:
  - url: https://api.example.com
paths:
  /external-docs/upload:
    post:
      summary: Upload external document (server-only)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary }
                orgId: { type: string }
      responses:
        '200': { description: OK }
  /external-docs/{id}:
    delete:
      summary: Delete external document (server-only)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: No Content }
    patch:
      summary: Update external document metadata
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                url: { type: string }
      responses:
        '200': { description: Updated }
  /storage/public-url:
    get:
      summary: Build public URL for object in public bucket
      parameters:
        - in: query
          name: bucket
          required: true
          schema: { type: string }
        - in: query
          name: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicUrl: { type: string }
  /diagrams:
    get:
      summary: List diagrams by project
      parameters:
        - in: query
          name: projectId
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
    post:
      summary: Upsert diagram record
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/DiagramUpsert' }
      responses:
        '200': { description: OK }
  /diagrams/{id}:
    get:
      summary: Get diagram by id
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
    patch:
      summary: Update name
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
      responses:
        '200': { description: Updated }
    delete:
      summary: Delete diagram
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: No Content }
components:
  schemas:
    DiagramUpsert:
      type: object
      required: [id, project_id, organization_id, name, diagram_data]
      properties:
        id: { type: string }
        project_id: { type: string }
        organization_id: { type: string }
        name: { type: string }
        diagram_data: { type: object, additionalProperties: true }
        thumbnail_url: { type: string }

